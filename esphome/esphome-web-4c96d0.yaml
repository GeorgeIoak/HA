esphome:
  name: solaredge-inverter

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging, use INFO for less traffic
logger: 
  level: DEBUG
#  level: VERY_VERBOSE

# Enable Home Assistant API
api:

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "SE-inverter_ESPHome"
    password: "MSL7FO6CN4tO"

captive_portal:

uart:
  id: uart2
  tx_pin: 17
  rx_pin: 16
  baud_rate: 115200
  stop_bits: 1

modbus:
  # flow_control_pin: 5
  id: modbus1
  uart_id: uart2

modbus_controller:
  - id: solaredge
    ## the Modbus device addr
    address: 1
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 5s # Changed from 10s to 5s on 12/3/22 AM

sensor:
  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Total Current"
    id: solaredge_total_ac_current
    register_type: holding
    address: 40071
    device_class: "current"
    state_class: "measurement"
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_current_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Phase A Current"
    id: solaredge_phase_a_current
    register_type: holding
    address: 40072
    device_class: "current"
    state_class: "measurement"
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_current_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Phase B Current"
    id: solaredge_phase_b_current
    internal: true
    register_type: holding
    address: 40073
    device_class: "current"
    state_class: "measurement"
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_current_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Phase C Current"
    id: solaredge_phase_c_current
    internal: true
    register_type: holding
    address: 40074
    device_class: "current"
    state_class: "measurement"
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_current_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Current Scale"
    id: solaredge_ac_current_scale
    register_type: holding
    address: 40075
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Phase AB Voltage"
    id: solaredge_ab_voltage
    register_type: holding
    address: 40076
    register_count: 1
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Phase BC Voltage"
    id: solaredge_bc_voltage
    internal: true
    register_type: holding
    address: 40077
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Phase CA Voltage"
    id: solaredge_ca_voltage
    internal: true
    register_type: holding
    address: 40078
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Phase A to Neutral Voltage"
    id: solaredge_an_voltage
    register_type: holding
    address: 40079
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Phase B to Neutral Voltage"
    id: solaredge_bn_voltage
    register_type: holding
    address: 40080
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Phase C to Neutral Voltage"
    id: solaredge_cn_voltage
    internal: true
    register_type: holding
    address: 40081
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Voltage Scale"
    id: solaredge_ac_voltage_scale
    register_type: holding
    address: 40082
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Real Power Raw"
    id: solaredge_ac_power_raw
    internal: true
    register_type: holding
    address: 40083
    register_count: 1
    device_class: "power"
    state_class: "measurement"
    unit_of_measurement: "W"
    value_type: S_WORD
    accuracy_decimals: 1
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Power Scale"
    id: solaredge_ac_power_scale
    register_type: holding
    address: 40084
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Frequency"
    id: solaredge_ac_frequency
    register_type: holding
    address: 40085
    device_class: "frequency"
    state_class: "measurement"
    unit_of_measurement: "Hz"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_ac_frequency_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "AC Frequency Scale"
    id: solaredge_ac_frequency_scale
    register_type: holding
    address: 40086
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Apparent Power"
    id: solaredge_ac_power_a
    register_type: holding
    address: 40087
    device_class: "apparent_power"
    state_class: "measurement"
    unit_of_measurement: "VA"
    value_type: S_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: -32768
      - lambda: return x * powf(10.0, id(solaredge_apparent_power_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Apparent Power Scale"
    id: solaredge_apparent_power_scale
    register_type: holding
    address: 40088
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Power Reactive"
    id: solaredge_power_reactive
    register_type: holding
    address: 40089
    device_class: "reactive_power"
    state_class: "measurement"
    unit_of_measurement: "var"
    value_type: S_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: -32768
      - lambda: return x * powf(10.0, id(solaredge_reactive_power_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Reactive Power Scale"
    id: solaredge_reactive_power_scale
    register_type: holding
    address: 40090
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan    
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Power Factor"
    id: solaredge_power_factor
    register_type: holding
    address: 40091
    unit_of_measurement: "%"
    value_type: S_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: -32768
      - lambda: return x * powf(10.0, id(solaredge_power_factor_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Total Power Factor Scale"
    id: solaredge_power_factor_scale
    register_type: holding
    address: 40092
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Energy Total"
    id: solaredge_energy_total
    register_type: holding
    address: 40093
    device_class: "energy"
    state_class: "total"
    unit_of_measurement: "Wh"
    value_type: U_DWORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_energy_total_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Energy Total Scale"
    id: solaredge_energy_total_scale
    register_type: holding
    address: 40095
    unit_of_measurement: ""
    value_type: U_WORD
    filters:
      - filter_out: nan
      - filter_out: 65535

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "DC Current"
    id: solaredge_current_dc
    register_type: holding
    address: 40096
    device_class: "current"
    state_class: "measurement"
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_dc_current_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "DC Current Scale"
    id: solaredge_dc_current_scale
    register_type: holding
    address: 40097
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "DC Voltage"
    id: solaredge_voltage_dc
    register_type: holding
    address: 40098
    device_class: "voltage"
    state_class: "measurement"
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: 65535
      - lambda: return x * powf(10.0, id(solaredge_dc_voltage_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "DC Voltage Scale"
    id: solaredge_dc_voltage_scale
    register_type: holding
    address: 40099
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "DC Power"
    id: solaredge_power_dc
    register_type: holding
    address: 40100
    device_class: "power"
    state_class: "measurement"
    unit_of_measurement: "W"
    value_type: S_WORD
    accuracy_decimals: 2
    filters:
      - filter_out: nan
      - filter_out: -32768
      - lambda: return x * powf(10.0, id(solaredge_dc_power_scale).state);

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "DC Power Scale"
    id: solaredge_dc_power_scale
    register_type: holding
    address: 40101
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Temperature"
    id: solaredge_temp
    register_type: holding
    address: 40103
    device_class: "temperature"
    state_class: "measurement"
    unit_of_measurement: "C"
    value_type: S_WORD
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
      - filter_out: nan
      - filter_out: -32768

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "Status"
    id: solaredge_status
    register_type: holding
    address: 40107
    unit_of_measurement: ""
    value_type: U_WORD
    filters:
      - filter_out: nan
      - filter_out: 65535

  - platform: modbus_controller
    modbus_controller_id: solaredge
    name: "SunSpec DID"
    id: solaredge_did
    register_type: holding
    address: 40002
    unit_of_measurement: ""
    value_type: S_WORD
    filters:
      - filter_out: nan
      - filter_out: -32768
    skip_updates: 255

#   - platform: modbus_controller
#     modbus_controller_id: solaredge
#     name: "Total Power and Scale"
#     id: ac_power_and_scale
#     register_type: holding
#     address: 40083
#     register_count: 2
#     value_type: S_DWORD
# #    accuracy_decimals: 2
#     # filters:
#     #   - lambda: |-
#     #       if ((x & 0xFFFF) >= 0x8000) {
#     #         return -((x & 0xFFFF) ^ 0xFFFF) + 1);
#     #       }
#     #       else {
#     #         return (x & 0xFFFF);
#     #       }
#       # - lambda: return x * powf(10.0, id(solaredge_ac_frequency_scale).state);
  
  - platform: template
    name: "Total Power"
    id: solaredge_ac_power
    device_class: "power"
    state_class: "measurement"
    unit_of_measurement: "W"
    lambda: |-
      return id(solaredge_ac_power_raw).state * powf(10.0, id(solaredge_ac_power_scale).state);
  
#   - platform: modbus_controller
#     modbus_controller_id: solaredge
#     name: "AC Frequency and Scale"
#     id: ac_frequency_and_scale
#     register_type: holding
#     address: 40085
#     value_type: FP32
#     lambda: |-
#       ESP_LOGI("","Lambda incoming value=%f - data array size is %d", x, data.size());
#       ESP_LOGI("","Sensor properties: address = 0x%X, offset = 0x%X value type=%d", item->start_address, item->offset, item->sensor_value_type);
#       int i=0 ;
#       for (auto val : data) {
#         ESP_LOGI("","data[%d]=0x%02X (%d)", i, data[i], data[i]);
#         i++;
#       }
#       return x ;
#     filters:
#       # - filter_out: nan
#       # - filter_out: 65535
# #      - lambda: return x * powf(10.0, id(solaredge_ac_frequency_scale).state);

text_sensor:
  - name: "SE Inverter Serial #"
    platform: modbus_controller
    modbus_controller_id: solaredge
    id: solaredge_serial_number
#    internal: true
    register_type: holding
    address: 40052
    register_count: 16
    raw_encode: NONE
    response_size: 4
    skip_updates: 255

  - name: "SE Inverter Model #"
    platform: modbus_controller
    modbus_controller_id: solaredge
    id: solaredge_model_number
#    internal: true
    register_type: holding
    address: 40020
    register_count: 16
    raw_encode: NONE
    response_size: 4
    skip_updates: 255

  - name: "Se Inverter Status"
    platform: template
    id: solaredge_text_status
    lambda: |-
      switch (int(id(solaredge_status).state)) {
        case 1: return std::string("Off");
        case 2: return std::string("Sleeping");
        case 3: return std::string("Grid Monitoring");
        case 4: return std::string("ON, Producing Power");
        case 5: return std::string("Production");
        case 6: return std::string("Shutting Down");
        case 7: return std::string("FAULT");
        case 8: return std::string("Maintenance");
        default: return std::string("Unknown");
        }
